// Distance of nearest cell having 1 - medium - 08/08/2023

class Pair{
    int first;
    int second;
    
    Pair(int a, int b){
        this.first = a;
        this.second = b;
    }
}
class Solution
{
    //Function to find distance of nearest 1 in the grid for each cell.
    public int[][] nearest(int[][] grid)
    {
        int m = grid.length;
        int n = grid[0].length;
        int[][] ans = new int[m][n];
        //boolean[][] vis = new boolean[m][n];
        
        Queue<Pair> q = new LinkedList<>();
        
        for(int i=0; i<m; i++){
            for(int j=0; j<n; j++){
                if(grid[i][j] == 1){
                    q.add(new Pair(i,j));
                    //vis[i][j] = true;
                    ans[i][j] = 0;
                }
                else {
                    ans[i][j] = -1;
                }
            }
        }
        
        int dx[] = {0, 0, 1, -1};
        int dy[] = {1, -1, 0, 0};
        
       
        while(!q.isEmpty()){
            int size = q.size();
            while(size-- != 0){
                int a = q.peek().first;
                int b = q.peek().second;
                q.remove();
                
                for(int k=0; k<4; k++){
                    int na = a + dx[k];
                    int nb = b + dy[k];
                    
                    if(na<0 || nb<0 || na>=m || nb>=n || ans[na][nb]!=-1){
                        continue;
                    }
                        
                    q.add(new Pair(na, nb));
                    ans[na][nb] = ans[a][b]+1;
                    
                }
            }
        }
        return ans;
    }
}
