// Minimum insertion steps to make string palindrom - hard - 22/08/2023

class Solution {
    int[][] dp;
    private int solve(String s, int i, int j){
        if(i>=j){
            return 0;
        }

        if(dp[i][j] != -1){
            return dp[i][j];
        }

        if(s.charAt(i) == s.charAt(j)){
            return solve(s, i+1, j-1);
        }
        else {
            return dp[i][j] = 1+Math.min(solve(s, i+1, j), solve(s, i, j-1));
        }
    }
    public int minInsertions(String s) {
        int n = s.length();
        dp = new int[n][n];
        for(int i=0; i<n; i++){
            Arrays.fill(dp[i], -1);
        }
        return solve(s, 0, n-1);
    }
}
