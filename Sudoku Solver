// Sudoku Solver - hard - 29/08/2023

class Solution {
    private boolean isSafe(char[][] board, int row, int col, char ch){
        for(int i=0; i<9; i++){
            if(board[row][i] == ch){
                return false;
            }
            if(board[i][col] == ch){
                return false;
            }
        }
        
        int sr = (row/3)*3;
        int sc = (col/3)*3;
        for(int i=sr; i<sr+3; i++){
            for(int j=sc; j<sc+3; j++){
                if(board[i][j] == ch){
                    return false;
                }
            }
        }
        return true;
    }
    private boolean solve(char[][] board, int row, int col){
        if(row == 9){
            return true;
        }

        if(col == 9){
            return solve(board, row+1, 0);
        }
       
        if(board[row][col] != '.'){
            return solve(board, row, col+1);
        }
        for(char i='1'; i<='9'; i++){
            if(isSafe(board, row, col, i)){
                board[row][col] = i;
                if(solve(board, row, col+1))return true;
                board[row][col] = '.';
            }
        }
        return false;
    }
    public void solveSudoku(char[][] board) {
        solve(board, 0, 0);
    }
}
